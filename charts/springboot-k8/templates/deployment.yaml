apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{.Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        prometheus.io/scrape: "true"         # Enable scraping
        prometheus.io/path: "/actuator/prometheus"  # Path for metrics (Spring Boot)
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: {{ .Values.containers.resources.requests.cpu }}
              memory: {{ .Values.containers.resources.requests.memory }}
            limits:
              cpu: {{ .Values.containers.resources.limits.cpu }}
              memory: {{ .Values.containers.resources.limits.memory }}
          readinessProbe:
              httpGet:
                path: {{ .Values.containers.readinessProbe.httpGet.path }}
                port: {{ .Values.containers.readinessProbe.httpGet.port }}
              initialDelaySeconds: {{ .Values.containers.readinessProbe.initialDelaySeconds }}
              periodSeconds: {{ .Values.containers.readinessProbe.periodSeconds }}
          livenessProbe:
              httpGet:
                path: {{ .Values.containers.livenessProbe.httpGet.path }}
                port: {{ .Values.containers.livenessProbe.httpGet.port }}
              initialDelaySeconds: {{ .Values.containers.livenessProbe.initialDelaySeconds }}
              periodSeconds: {{ .Values.containers.livenessProbe.periodSeconds }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

